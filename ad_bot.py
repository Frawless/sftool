import timeimport threadingfrom common import constants as constfrom common.custom_logger import logger, DEBUG_LEVELfrom common import common_utils as utildef check_device_loop(emulator):    logger.info(f"Running loop for: {emulator}")    while True:        if util.is_emulator_attached(emulator):            util.take_screenshot(emulator)            if util.is_in_game(emulator):                if util.is_ad_present(emulator):                    logger.info(f"[{emulator.serial}]: has AD")                    util.watch_ad_and_close_after(emulator)                else:                    util.close_ad_if_playing(emulator)            else:                logger.error(f"[{emulator.serial}]: is not playing sf")                exit(1)        else:            logger.error(f"[{emulator.serial}]: is offline")            breakif __name__ == '__main__':    logger.setLevel(DEBUG_LEVEL)    logger.info("Started Shakes_AD_Bot")    # check installed adb    util.check_cli_tools_installed()    util.clean_screenshots()    adb = util.get_adb_client()    emulator_device_list = adb.device_list()    thread_list = []    if len(emulator_device_list) == 0 or (len(emulator_device_list) == 1 and emulator_device_list[0].info == const.OFFLINE):        logger.error("No running emulators, exiting now.")        exit(1)    for device in emulator_device_list:        thread = threading.Thread(target=check_device_loop, args=(device,))        thread.start()        thread_list.append(thread)    try:        while True:            pass    except KeyboardInterrupt:        logger.debug("Program status: Ending program.")        for thread in thread_list:            thread.join()